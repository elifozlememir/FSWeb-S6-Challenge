{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elif\\\\Documents\\\\React\\\\FSWeb-S6-Challenge\\\\src\\\\components\\\\Karakterler.js\",\n  _s = $RefreshSig$();\nimport Karakter from \"./Karakter\";\nimport { Accordion } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Karakterler = props => {\n  _s();\n  /* const data=props.data; */\n  const {\n    data\n  } = props;\n  const [open, setOpen] = useState('1');\n  const toggle = id => {\n    if (open === id) {\n      setOpen();\n    } else {\n      setOpen(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      open: open,\n      toggle: toggle,\n      children: data.map(item => {\n        return /*#__PURE__*/_jsxDEV(Karakter, {\n          karakter: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Karakterler, \"xAIfVgvFJ6GAJ9vUUusRBV+vZ1E=\");\n_c = Karakterler;\nexport default Karakterler;\nvar _c;\n$RefreshReg$(_c, \"Karakterler\");","map":{"version":3,"names":["Karakter","Accordion","jsxDEV","_jsxDEV","Karakterler","props","_s","data","open","setOpen","useState","toggle","id","children","map","item","karakter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elif/Documents/React/FSWeb-S6-Challenge/src/components/Karakterler.js"],"sourcesContent":["import Karakter from \"./Karakter\";\r\nimport {Accordion} from 'reactstrap';\r\n\r\nconst Karakterler= (props)=>{\r\n    /* const data=props.data; */\r\n    const {data}=props;\r\n    const [open, setOpen] = useState('1');\r\n    const toggle = (id) => {\r\n      if (open === id) {\r\n        setOpen();\r\n      } else {\r\n        setOpen(id);\r\n      }\r\n    };\r\n   \r\n    return(\r\n\r\n        <div>\r\n            <Accordion open={open} toggle={toggle}>\r\n        {data.map((item)=>{\r\n          return(  <Karakter karakter={item}></Karakter>\r\n        )\r\n        })}\r\n            </Accordion>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Karakterler;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAAQC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGC,KAAK,IAAG;EAAAC,EAAA;EACxB;EACA,MAAM;IAACC;EAAI,CAAC,GAACF,KAAK;EAClB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAMC,MAAM,GAAIC,EAAE,IAAK;IACrB,IAAIJ,IAAI,KAAKI,EAAE,EAAE;MACfH,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACLA,OAAO,CAACG,EAAE,CAAC;IACb;EACF,CAAC;EAED,oBAEIT,OAAA;IAAAU,QAAA,eACIV,OAAA,CAACF,SAAS;MAACO,IAAI,EAAEA,IAAK;MAACG,MAAM,EAAEA,MAAO;MAAAE,QAAA,EACzCN,IAAI,CAACO,GAAG,CAAEC,IAAI,IAAG;QAChB,oBAASZ,OAAA,CAACH,QAAQ;UAACgB,QAAQ,EAAED;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAEhD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAGd,CAAC;AAAAd,EAAA,CAxBKF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}