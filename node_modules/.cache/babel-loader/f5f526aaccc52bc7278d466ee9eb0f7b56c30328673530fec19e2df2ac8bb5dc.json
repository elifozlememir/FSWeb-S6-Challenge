{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elif\\\\Documents\\\\React\\\\FSWeb-S6-Challenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://swapi.dev/api/people/\").then(res => {\n      setData(res.data);\n      /* console.log(res.data) */\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Header\",\n      children: \"Karakterler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","data","setData","get","then","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["C:/Users/elif/Documents/React/FSWeb-S6-Challenge/src/App.js"],"sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  const [data,setData]=useState([]);\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"https://swapi.dev/api/people/\")\r\n    .then(res =>{\r\n      setData (res.data)\r\n      /* console.log(res.data) */\r\n    })\r\n  },[])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">Karakterler</h1>\r\n      {data.map((item)=>{\r\n        return(\r\n          <div>\r\n          {item}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;;EAEA;EACA;EACA;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAEjCD,SAAS,CAAC,MAAI;IACZF,KAAK,CAACU,GAAG,CAAC,+BAA+B,CAAC,CACzCC,IAAI,CAACC,GAAG,IAAG;MACVH,OAAO,CAAEG,GAAG,CAACJ,IAAI,CAAC;MAClB;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAIL,oBACEH,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAIQ,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtCV,IAAI,CAACW,GAAG,CAAEC,IAAI,IAAG;MAChB,oBACEf,OAAA;QAAAS,QAAA,EACCM;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAAAX,EAAA,CAhCKD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}