{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elif\\\\Documents\\\\React\\\\FSWeb-S6-Challenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport React, { useState } from 'react';\nimport { Accordion, AccordionBody, AccordionHeader, AccordionItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://swapi.dev/api/people/\").then(res => {\n      setCharacters(res.data);\n      /* console.log(res.data) */\n    });\n  }, []);\n  const [open, setOpen] = useState('1');\n  const toggle = id => {\n    if (open === id) {\n      setOpen();\n    } else {\n      setOpen(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Header\",\n      children: \"Karakterler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      open: open,\n      toggle: toggle,\n      children: /*#__PURE__*/_jsxDEV(AccordionItem, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n          targetId: \"1\",\n          children: \"Accordion Item 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n          accordionId: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the first item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), \"You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 27\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CBZ0BqKP8q81nO3coemzPOi+gX8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","React","useState","Accordion","AccordionBody","AccordionHeader","AccordionItem","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","get","then","res","data","open","setOpen","toggle","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","targetId","accordionId","_c","$RefreshReg$"],"sources":["C:/Users/elif/Documents/React/FSWeb-S6-Challenge/src/App.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Accordion,\r\n  AccordionBody,\r\n  AccordionHeader,\r\n  AccordionItem,\r\n} from 'reactstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n  const [characters,setCharacters]=useState([]);\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"https://swapi.dev/api/people/\")\r\n    .then(res =>{\r\n      setCharacters(res.data)\r\n      /* console.log(res.data) */\r\n    })\r\n  },[])\r\n\r\n\r\n\r\n    const [open, setOpen] = useState('1');\r\n    const toggle = (id) => {\r\n      if (open === id) {\r\n        setOpen();\r\n      } else {\r\n        setOpen(id);\r\n      }\r\n    };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">Karakterler</h1>\r\n\r\n\r\n      <Accordion open={open} toggle={toggle}>\r\n        <AccordionItem>\r\n          <AccordionHeader targetId=\"1\">Accordion Item 1</AccordionHeader>\r\n          <AccordionBody accordionId=\"1\">\r\n            <strong>This is the first item&#39;s accordion body.</strong>\r\n            You can modify any of this with custom CSS or overriding our default\r\n            variables. It&#39;s also worth noting that just about any HTML can\r\n            go within the <code>.accordion-body</code>, though the transition\r\n            does limit overflow.\r\n          </AccordionBody>\r\n        </AccordionItem>\r\n\r\n\r\n      </Accordion>\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,SAAS,EACTC,aAAa,EACbC,eAAe,EACfC,aAAa,QACR,YAAY;AAEnB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;;EAEA;EACA;EACA;EACA,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAE7CF,SAAS,CAAC,MAAI;IACZD,KAAK,CAACc,GAAG,CAAC,+BAA+B,CAAC,CACzCC,IAAI,CAACC,GAAG,IAAG;MACVH,aAAa,CAACG,GAAG,CAACC,IAAI,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAIH,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAMiB,MAAM,GAAIC,EAAE,IAAK;IACrB,IAAIH,IAAI,KAAKG,EAAE,EAAE;MACfF,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACLA,OAAO,CAACE,EAAE,CAAC;IACb;EACF,CAAC;EAIH,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAIa,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvClB,OAAA,CAACL,SAAS;MAACc,IAAI,EAAEA,IAAK;MAACE,MAAM,EAAEA,MAAO;MAAAG,QAAA,eACpCd,OAAA,CAACF,aAAa;QAAAgB,QAAA,gBACZd,OAAA,CAACH,eAAe;UAACsB,QAAQ,EAAC,GAAG;UAAAL,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC,eAChElB,OAAA,CAACJ,aAAa;UAACwB,WAAW,EAAC,GAAG;UAAAN,QAAA,gBAC5Bd,OAAA;YAAAc,QAAA,EAAQ;UAA4C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,sJAG/C,eAAAlB,OAAA;YAAAc,QAAA,EAAM;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,gDAE5C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGT,CAAC;AAEV,CAAC;AAAAhB,EAAA,CArDKD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAuDT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}