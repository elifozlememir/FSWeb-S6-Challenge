{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elif\\\\Documents\\\\React\\\\FSWeb-S6-Challenge\\\\src\\\\components\\\\Karakterler.js\",\n  _s = $RefreshSig$();\nimport Karakter from \"./Karakter\";\nimport { Accordion } from 'reactstrap';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Karakterler = props => {\n  _s();\n  /* const data=props.data; */\n  const {\n    data\n  } = props;\n  const [open, setOpen] = useState(\"0\");\n  const toggle = id => {\n    if (open === id) {\n      setOpen();\n    } else {\n      setOpen(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      open: open,\n      toggle: toggle,\n      children: data.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Karakter, {\n          item: item,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Karakterler, \"MZR2kS9vbxHFYIUZam21lvycrHw=\");\n_c = Karakterler;\nexport default Karakterler;\nvar _c;\n$RefreshReg$(_c, \"Karakterler\");","map":{"version":3,"names":["Karakter","Accordion","React","useState","jsxDEV","_jsxDEV","Karakterler","props","_s","data","open","setOpen","toggle","id","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elif/Documents/React/FSWeb-S6-Challenge/src/components/Karakterler.js"],"sourcesContent":["\r\nimport Karakter from \"./Karakter\";\r\nimport {Accordion} from 'reactstrap';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst Karakterler= (props)=>{\r\n    /* const data=props.data; */\r\n    const {data}=props;\r\n\r\n    const [open, setOpen] = useState(\"0\");\r\n    const toggle = (id) => {\r\n      if (open === id) {\r\n        setOpen();\r\n      } else {\r\n        setOpen(id);\r\n      }\r\n    };\r\n   \r\n    return(\r\n\r\n        <div>\r\n            <Accordion open={open} toggle={toggle}>\r\n        {data.map((item,index)=>{\r\n          return(  <Karakter item={item} index={index}></Karakter>\r\n        )\r\n        })}\r\n            </Accordion>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Karakterler;"],"mappings":";;AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAAQC,SAAS,QAAO,YAAY;AACpC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,WAAW,GAAGC,KAAK,IAAG;EAAAC,EAAA;EACxB;EACA,MAAM;IAACC;EAAI,CAAC,GAACF,KAAK;EAElB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAMS,MAAM,GAAIC,EAAE,IAAK;IACrB,IAAIH,IAAI,KAAKG,EAAE,EAAE;MACfF,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACLA,OAAO,CAACE,EAAE,CAAC;IACb;EACF,CAAC;EAED,oBAEIR,OAAA;IAAAS,QAAA,eACIT,OAAA,CAACJ,SAAS;MAACS,IAAI,EAAEA,IAAK;MAACE,MAAM,EAAEA,MAAO;MAAAE,QAAA,EACzCL,IAAI,CAACM,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;QACtB,oBAASZ,OAAA,CAACL,QAAQ;UAACgB,IAAI,EAAEA,IAAK;UAACC,KAAK,EAAEA;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAE1D,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAGd,CAAC;AAAAb,EAAA,CAzBKF,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}