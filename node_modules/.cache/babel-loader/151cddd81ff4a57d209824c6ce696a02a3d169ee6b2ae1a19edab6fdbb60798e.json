{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interceptXMLHttpRequest = void 0;\nvar XMLHttpRequestOverride_1 = require(\"./XMLHttpRequestOverride\");\nvar debug = require('debug')('XHR');\nvar pureXMLHttpRequest =\n// Although executed in node, certain processes emulate the DOM-like environment\n// (i.e. `js-dom` in Jest). The `window` object would be avilable in such environments.\ntypeof window === 'undefined' ? undefined : window.XMLHttpRequest;\n/**\n * Intercepts requests issued via `XMLHttpRequest`.\n */\nvar interceptXMLHttpRequest = function (observer, resolver) {\n  if (pureXMLHttpRequest) {\n    debug('patching \"XMLHttpRequest\" module...');\n    var XMLHttpRequestOverride = XMLHttpRequestOverride_1.createXMLHttpRequestOverride({\n      pureXMLHttpRequest: pureXMLHttpRequest,\n      observer: observer,\n      resolver: resolver\n    });\n    window.XMLHttpRequest = XMLHttpRequestOverride;\n  }\n  return function () {\n    if (pureXMLHttpRequest) {\n      debug('restoring modules...');\n      window.XMLHttpRequest = pureXMLHttpRequest;\n    }\n  };\n};\nexports.interceptXMLHttpRequest = interceptXMLHttpRequest;","map":{"version":3,"mappings":";;;;;;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AAErC,IAAMC,kBAAkB;AACtB;AACA;AACA,OAAOC,MAAM,KAAK,WAAW,GAAGC,SAAS,GAAGD,MAAM,CAACE,cAAc;AAEnE;;;AAGO,IAAMC,uBAAuB,GAAgB,UAACC,QAAQ,EAAEC,QAAQ;EACrE,IAAIN,kBAAkB,EAAE;IACtBF,KAAK,CAAC,qCAAqC,CAAC;IAE5C,IAAMS,sBAAsB,GAAGC,qDAA4B,CAAC;MAC1DR,kBAAkB;MAClBK,QAAQ;MACRC,QAAQ;KACT,CAAC;IAEFL,MAAM,CAACE,cAAc,GAAGI,sBAAsB;;EAGhD,OAAO;IACL,IAAIP,kBAAkB,EAAE;MACtBF,KAAK,CAAC,sBAAsB,CAAC;MAE7BG,MAAM,CAACE,cAAc,GAAGH,kBAAkB;;EAE9C,CAAC;AACH,CAAC;AApBYS,+BAAuB","names":["debug","require","pureXMLHttpRequest","window","undefined","XMLHttpRequest","interceptXMLHttpRequest","observer","resolver","XMLHttpRequestOverride","XMLHttpRequestOverride_1","exports"],"sources":["C:\\Users\\elif\\Documents\\React\\FSWeb-S6-Challenge\\node_modules\\@mswjs\\interceptors\\src\\interceptors\\XMLHttpRequest\\index.ts"],"sourcesContent":["import { Interceptor } from '../../createInterceptor'\nimport { createXMLHttpRequestOverride } from './XMLHttpRequestOverride'\n\nconst debug = require('debug')('XHR')\n\nconst pureXMLHttpRequest =\n  // Although executed in node, certain processes emulate the DOM-like environment\n  // (i.e. `js-dom` in Jest). The `window` object would be avilable in such environments.\n  typeof window === 'undefined' ? undefined : window.XMLHttpRequest\n\n/**\n * Intercepts requests issued via `XMLHttpRequest`.\n */\nexport const interceptXMLHttpRequest: Interceptor = (observer, resolver) => {\n  if (pureXMLHttpRequest) {\n    debug('patching \"XMLHttpRequest\" module...')\n\n    const XMLHttpRequestOverride = createXMLHttpRequestOverride({\n      pureXMLHttpRequest,\n      observer,\n      resolver,\n    })\n\n    window.XMLHttpRequest = XMLHttpRequestOverride\n  }\n\n  return () => {\n    if (pureXMLHttpRequest) {\n      debug('restoring modules...')\n\n      window.XMLHttpRequest = pureXMLHttpRequest\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}